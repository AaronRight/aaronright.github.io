{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","title","play","perform","selector","template","styles","AppModule","declarations","imports","providers","bootstrap","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMA,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AA+FI;;;;;;;;AAEE;;;AAhGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAsGaC,Y;AAZb;AAAA;;AAaE,eAAAC,KAAA,GAAQ,aAAR;AAEA,eAAAC,IAAA,GAAO,KAAP;AAUD;;;;oCARW;AACR,gBAAI,KAAKA,IAAT,EAAe,CACb;AACD,aAFD,MAEO,CACL;AACD;;AACD,iBAAKA,IAAL,GAAY,CAAC,KAAKA,IAAlB;AACD;;;;;;;yBAZUF,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA,kU;AAAA;AAAA;AATvB;;AAAA;;AAA4D;AAAA,qBAAS,IAAAG,OAAA,EAAT;AAAkB,aAAlB;;AAC1D;;AACA;;AAGF;;;;;;AAJQ;;AAAA,uFAA4B,UAA5B,EAA4B,GAA5B;;;;;;;;;wEAQGH,Y,EAAY;gBAZxB,uDAYwB;iBAZd;AACTI,oBAAQ,EAAE,UADD;AAETC,oBAAQ,0UAFC;AAUTC,kBAAM,EAAE;AAVC,W;AAYc,U;;;;;;;;;;;;;;;;;;ACvGzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaC,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAHT,E;AAAE,kBAHJ,CACP,uEADO,CAGI;;;;4HAGFA,S,EAAS;AAAA,yBARlB,2DAQkB;AARN,oBAGZ,uEAHY;AAQM,S;AALL,O;;;;;wEAKJA,S,EAAS;gBAVrB,sDAUqB;iBAVZ;AACRC,wBAAY,EAAE,CACZ,2DADY,CADN;AAIRC,mBAAO,EAAE,CACP,uEADO,CAJD;AAORC,qBAAS,EAAE,EAPH;AAQRC,qBAAS,EAAE,CAAC,2DAAD;AARH,W;AAUY,U;;;;;;;;;;;;;;;;;;ACftB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYZ,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBa,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASG,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,8BAAwB,CAACW,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n/*\nclass Noise {\n  static audioContext = new window.AudioContext;\n  static fadeOutTimer: any;\n\n  // https://noisehack.com/generate-noise-web-audio-api/\n  static createNoise(track: any) {\n\n    const bufferSize = 2 * Noise.audioContext.sampleRate;\n    const noiseBuffer = Noise.audioContext.createBuffer(1, bufferSize, Noise.audioContext.sampleRate);\n    const output = noiseBuffer.getChannelData(0);\n\n    for (let i = 0; i < bufferSize; i++) {\n      output[i] = Math.random() * 2 - 1;\n    }\n\n    track.audioSource.buffer = noiseBuffer;\n  }\n\n  static stopNoise(track: any) {\n    if (track.audioSource) {\n      clearTimeout(Noise.fadeOutTimer);\n      track.audioSource.stop();\n    }\n  }\n\n  static fadeNoise(track: any) {\n\n    if (track.fadeOut) {\n      track.fadeOut = (track.fadeOut >= 0) ? track.fadeOut : 0.5;\n    } else {\n      track.fadeOut = 0.5;\n    }\n\n    if (track.canFade) {\n      track.gainNode.gain.linearRampToValueAtTime(0, Noise.audioContext.currentTime + track.fadeOut);\n      track.canFade = false;\n\n      Noise.fadeOutTimer = setTimeout(() => {\n        Noise.stopNoise(track);\n      }, track.fadeOut * 1000);\n\n    } else {\n      Noise.stopNoise(track);\n    }\n  }\n\n  static buildTrack(track: any) {\n    track.audioSource = Noise.audioContext.createBufferSource();\n    track.gainNode = Noise.audioContext.createGain();\n    track.audioSource.connect(track.gainNode);\n    track.gainNode.connect(Noise.audioContext.destination);\n    track.canFade = true; // used to prevent fadeOut firing twice\n  }\n\n  static setGain(track: any) {\n\n    track.volume = (track.volume >= 0) ? track.volume : 0.5;\n\n    if (track.fadeIn) {\n      track.fadeIn = (track.fadeIn >= 0) ? track.fadeIn : 0.5;\n    } else {\n      track.fadeIn = 0.5;\n    }\n\n    track.gainNode.gain.setValueAtTime(0, Noise.audioContext.currentTime);\n\n    track.gainNode.gain.linearRampToValueAtTime(track.volume / 4, Noise.audioContext.currentTime + track.fadeIn / 2);\n\n    track.gainNode.gain.linearRampToValueAtTime(track.volume, Noise.audioContext.currentTime + track.fadeIn);\n\n  }\n\n  static playNoise(track: any) {\n    Noise.stopNoise(track);\n    Noise.buildTrack(track);\n    Noise.createNoise(track);\n    Noise.setGain(track);\n    track.audioSource.loop = true;\n    track.audioSource.start();\n  }\n}\n\nvar noise = {\n  volume: 0.05, // 0 - 1\n  fadeIn: 2.5, // time in seconds\n  fadeOut: 1.3, // time in seconds\n}\n*/\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10 10\" (click)=\"perform()\">\n    <rect *ngIf=\"play; else elseBlock\" fill=\"#000000\" x=\"2\" y=\"2\" width=\"6\" height=\"6\"></rect>  \n    <ng-template #elseBlock>\n      <path fill=\"#000000\" d=\"M 2,2 L 8,5 2,8 Z\"></path>\n    </ng-template>\n  </svg>\n  `,\n  styles: []\n})\nexport class AppComponent {\n  title = 'White Noise';\n\n  play = false\n\n  perform() {\n    if (this.play) {\n      //Noise.stopNoise(noise)\n    } else {\n      //Noise.playNoise(noise)\n    }\n    this.play = !this.play;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}